{
  "info": {
    "name": "Django Login & Registration Backend API",
    "description": "Complete API collection for Django Login & Registration Backend with MySQL",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "variable": [
    {
      "key": "base_url",
      "value": "http://127.0.0.1:8000",
      "type": "string"
    },
    {
      "key": "api_url",
      "value": "{{base_url}}/api/auth",
      "type": "string"
    },
    {
      "key": "auth_token",
      "value": "",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "Root Endpoint",
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "url": {
          "raw": "{{base_url}}/",
          "host": ["{{base_url}}"],
          "path": [""]
        },
        "description": "Get API information and available endpoints"
      }
    },
    {
      "name": "User Registration",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"username\": \"johndoe123\",\n  \"email\": \"john.doe@example.com\",\n  \"password\": \"SecurePassword123!\",\n  \"password_confirm\": \"SecurePassword123!\",\n  \"first_name\": \"John\",\n  \"last_name\": \"Doe\",\n  \"university\": \"University of Dhaka\",\n  \"blood_group\": \"A+\",\n  \"mobile_no\": \"+8801234567890\",\n  \"gender\": \"M\",\n  \"date_of_birth\": \"1995-05-15\",\n  \"address\": \"123 Main Street, Dhaka, Bangladesh\"\n}"
        },
        "url": {
          "raw": "{{api_url}}/register/",
          "host": ["{{api_url}}"],
          "path": ["register", ""]
        },
        "description": "Register a new user with all fields"
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "if (pm.response.code === 201) {",
              "    const response = pm.response.json();",
              "    pm.collectionVariables.set('auth_token', response.token);",
              "    pm.test('Registration successful', function () {",
              "        pm.expect(response.message).to.eql('User registered successfully');",
              "    });",
              "}"
            ]
          }
        }
      ]
    },
    {
      "name": "User Login",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"email_or_username\": \"john.doe@example.com\",\n  \"password\": \"SecurePassword123!\"\n}"
        },
        "url": {
          "raw": "{{api_url}}/login/",
          "host": ["{{api_url}}"],
          "path": ["login", ""]
        },
        "description": "Login with email or username"
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "if (pm.response.code === 200) {",
              "    const response = pm.response.json();",
              "    pm.collectionVariables.set('auth_token', response.token);",
              "    pm.test('Login successful', function () {",
              "        pm.expect(response.message).to.eql('Login successful');",
              "    });",
              "}"
            ]
          }
        }
      ]
    },
    {
      "name": "Get User Profile",
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "Authorization",
            "value": "Token {{auth_token}}"
          }
        ],
        "url": {
          "raw": "{{api_url}}/profile/",
          "host": ["{{api_url}}"],
          "path": ["profile", ""]
        },
        "description": "Get current user's profile"
      }
    },
    {
      "name": "Update User Profile",
      "request": {
        "method": "PATCH",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "Authorization",
            "value": "Token {{auth_token}}"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"first_name\": \"Jane\",\n  \"last_name\": \"Smith\",\n  \"university\": \"BUET\",\n  \"blood_group\": \"B+\",\n  \"mobile_no\": \"+8801987654321\",\n  \"gender\": \"F\"\n}"
        },
        "url": {
          "raw": "{{api_url}}/profile/",
          "host": ["{{api_url}}"],
          "path": ["profile", ""]
        },
        "description": "Update user profile (partial update)"
      }
    },
    {
      "name": "Change Password",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "Authorization",
            "value": "Token {{auth_token}}"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"old_password\": \"SecurePassword123!\",\n  \"new_password\": \"NewSecurePassword456!\",\n  \"new_password_confirm\": \"NewSecurePassword456!\"\n}"
        },
        "url": {
          "raw": "{{api_url}}/change-password/",
          "host": ["{{api_url}}"],
          "path": ["change-password", ""]
        },
        "description": "Change user password"
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "if (pm.response.code === 200) {",
              "    const response = pm.response.json();",
              "    pm.collectionVariables.set('auth_token', response.token);",
              "    pm.test('Password changed successfully', function () {",
              "        pm.expect(response.message).to.eql('Password changed successfully');",
              "    });",
              "}"
            ]
          }
        }
      ]
    },
    {
      "name": "Get User Info",
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "Authorization",
            "value": "Token {{auth_token}}"
          }
        ],
        "url": {
          "raw": "{{api_url}}/user-info/",
          "host": ["{{api_url}}"],
          "path": ["user-info", ""]
        },
        "description": "Get current user information"
      }
    },
    {
      "name": "Check Email Availability",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"email\": \"john.doe@example.com\"\n}"
        },
        "url": {
          "raw": "{{api_url}}/check-email/",
          "host": ["{{api_url}}"],
          "path": ["check-email", ""]
        },
        "description": "Check if email already exists"
      }
    },
    {
      "name": "Check Username Availability",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"username\": \"johndoe123\"\n}"
        },
        "url": {
          "raw": "{{api_url}}/check-username/",
          "host": ["{{api_url}}"],
          "path": ["check-username", ""]
        },
        "description": "Check if username already exists"
      }
    },
    {
      "name": "User Logout",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "Authorization",
            "value": "Token {{auth_token}}"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{}"
        },
        "url": {
          "raw": "{{api_url}}/logout/",
          "host": ["{{api_url}}"],
          "path": ["logout", ""]
        },
        "description": "Logout and invalidate token"
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "if (pm.response.code === 200) {",
              "    pm.collectionVariables.set('auth_token', '');",
              "    pm.test('Logout successful', function () {",
              "        const response = pm.response.json();",
              "        pm.expect(response.message).to.eql('Logout successful');",
              "    });",
              "}"
            ]
          }
        }
      ]
    }
  ]
}
